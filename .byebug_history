exit
Tag.find(params[:tag])
tag
exit
@resources = @resources.includes(:tags).where(tags: { text: 'Tag2' })
@resources
@resources = @resources.includes(:tags).where(tags: { text: 'Tag1' })
@resources.includes(:tags).where(tags: { text: 'Tag1' })
@resources = Resource.includes(:tags)
Resource.includes(:tags)
Resource.includes.tags
array.drop(1)
array = [0,1,2,3]
array.drop(3)
array.drop(1)
array.drop
array = [1,2,3]
tagarray.shift
tagarray.pop
tagarray
tagstring
@tagarray
exit
@tagstring
exit
@tagstring
exit
params
exit
exi
params[:tag] + "tag"
params[:tag]
params[:tags]
params[tags]
request.url
request.params
request.parmas
exit
params
@tagarray
exit
@tagarray
params
parmas
exit
exi
params
exit
params
exit
@tagarray.append(params[:tag]).append(params[:tags])
params
exit
params
exit
params
exit
params
@test
exit
params
params.slice(:sort)
request.query_params
request.params
request.url
request.query_params.merge
request.params.merge
request.params
exit
request.url
url
exit
request.original_uri
request.uri
request.url
params[:tag]
exit
@test
params
params[:tag]
exit
@test
params[:tag]
params[:teh]
params[:test]
exit
params[:tag]
test
@test
@Test
params[:tag]
params[:tag
exit
params[:tag]
exit
params[:tag]
exit
params[:tag]
exit
params[:tag]
tag
exit
params[:tag][0]
params[:tag][1]
params[:tag]
exit
params[tags]
params["tags"]
params["tag"]
params["tag[]"]
params[:tags]
params[:tags]]
params[:tag]
exit
params[:tag].to_i
params[:tag]
params[:tags]
params[:tags
exit
quit
exit
@reservation.resource.reservations
@reservation.resource
@reservation
exit
Tag.first.destroy
self.tags.exists?(tag.id)
self.tags.exists?(tagid)
self.tags.exists?(tag2.id)
self.tags.exists(tag2.id)
self.tags
self.tags.includes(tag2.id).text
self.tags.includes(tag2.id).all
self.tags.includes(tag2.id)
self.tags.find(tag2.id)
self.tags.exists(tag2.id)
self.tags.methods
self.tags.contains?(tag2)
self.tags.contains(tag2)
self.tags.where(tag2).empty?
self.tags.where(tag2)
if( self.tags.find(tag2) )
if self.tags.find(tag2) 
self.tags.find(tag2)
tag2
tag2 = Tag.create(:text => "wrongtag")
self.tags.find(tag)
self
slef
Tag.find(tag)
tag
exit
Tag.where(:text => "tag1,").empty?
Tag.where(:text => "tag1,")
tag.where(:text => "tag1,")
tagarray
exit
@resource.temp_tags
exit
@resource
params["resource"]["temp_tags"]
params["temp_tags"]
params
