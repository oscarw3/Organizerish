== README

deployed app: organizerish.herokuapp.com

Backend TODO list:

Frontend TODO list:
Setting up react: https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers

1. Display reservations in time span
2. Display things more intuitively

'Bugs':
1. Email time won't update when the time of the reservation is updated
2. Add security so only current_user or admin can edit the reservation (link not present, but hacker could type it into the url to access the page)
3. tag filtering is buggy, if two filters displays overlapping objects twice

Cool things to do later on:
1. Recurring reservations
2. Invisible reservations

Used this guide for devise authentication
http://guides.railsgirls.com/devise/

gmail:
see application.yml
username: organizerish@gmail.com
password: organizerish123

Models:

User-
id
firstname 
Lastname
email
password 
role: (0 = admin, 1 = user)

(1 user to many resources)
Resources
id
name: string
description: string
userid: integer

(Many tags to many with resources)
Tags :
id
text: string

(1 resource to many reservations)
Reservations:
id
occupied: integer (userid, -1 = available, -2 = unavailable by admin)
start time: datetime
end time: datetime
recurring: integer (enum)

