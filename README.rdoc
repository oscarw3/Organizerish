== README

deployed app: organizerish.herokuapp.com

https://oauth.oit.duke.edu/oauth/authorize.php?client_id=ECE458_Resource_manager6&state=0.6590120431501418&response_type=token&redirect_uri=https://organizerish.herokuapp.com

Backend TODO list:
1. Add login with netid feature
2. Add third party API 

Frontend TODO list:
Setting up react: https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers

1. Have Calendar display my reservations and all reservations and have the user able to edit his reservations
2. Have Drag and Drop for Tags
3. Be able to remove tags from search tags
4. Have the view altered based on permissions (which navbar to display, what buttons to display)
5. filter based on time (using calendar)

'Bugs':
1. Email time won't update when the time of the reservation is updated
2. Can't edit reservation if it overlaps with the reservation that is currently being edited
3. Cannot currently update tags with api
4. the other resources that show up is when creating a reservation is all resources, not ones with reserve access

Cool things to do later on:
1. Recurring reservations
2. Invisible reservations


Used this guide for devise authentication
http://guides.railsgirls.com/devise/

gmail:
see application.yml
username: organizerish@gmail.com
password: organizerish123

Models:

User-
id
firstname 
Lastname
email
password 
role: (0 = admin = , 1 = user)


(1 user to many resources)
Resources
id
name: string
description: string
userid: integer

(Many tags to many with resources)
Tags :
id
text: string

(1 resource to many reservations)
Reservations:
id
occupied: integer (userid, -1 = available, -2 = unavailable by admin)
start time: datetime
end time: datetime
recurring: integer (enum)

Groups
(many groups to many users)
name: string
resourcemanagement: (0= no access, 1= yes access)
reservationmanagement: (0= no access, 1= yes access)
usermanagement: (0= no access, 1= yes access)


Permission 
(1 Resource to many permissions)
(many groups to many permissions)
viewaccess: (0= no access, 1= yes access)
reserveaccess: (0= no access, 1= yes access)

Node 
(1 Node to many resources (children))
parent id: integer

